import logging
from aiogram import Bot, Dispatcher, executor, types
from keyboards import *
from films import films
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import os
from dotenv import load_dotenv


load_dotenv()


TOKEN = os.getenv('TOKEN')


logging.basicConfig(level=logging.INFO)

bot = Bot(token=TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())

ADMINS = [1338535362]

@dp.message_handler(commands ='start')
async def start(message: types.message):
    film_choice = InlineKeyboardMarkup()
    for film in films:
        button = InlineKeyboardButton(text=film, callback_data=film)
        film_choice.add(button)
    # await bot.send_message(message.from_user.id, 'Hello! I am echo bot.')
    # OR
    await message.answer('–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç - –∫—ñ–Ω–æ—Ñ—ñ—à–∞. üçø\n –û–±–µ—Ä–∏ —Ñ—ñ–ª—å–º, –ø—Ä–æ —è–∫–∏–π —Ç–∏ —Ö–æ—á–µ—à –¥—ñ–∑–Ω–∞—Ç–∏—Å—è.', reply_markup=film_choice)


@dp.callback_query_handler()
async def get_film_info(callback_query: types.CallbackQuery):
    if callback_query.data in films.keys():
        await bot.send_photo(callback_query.message.chat.id, films[callback_query.data]["photo"])
        film_url = films[callback_query.data]['site_url']
        film_rating = films[callback_query.data]['rating']
        film_description = films[callback_query.data]['description']
        message = f'<b>Film url:</b> {film_url} \n\n <b>About:</b> {film_description}\n\n<b>Rate:</b> {film_rating}'
        await bot.send_message(callback_query.message.chat.id, message, parse_mode = 'html')
    else:
        await bot.send_message(callback_query.message.chat.id, '–í–∏–±–∞—á—Ç–µ, —Ñ—ñ–ª—å–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ üòî')



@dp.message_handler(commands='add_film')
async def add_new_film(message: types.Message, state=FSMContext):
    user_id = message.from_user.id
    if user_id in ADMINS:
        await message.answer(text='–í–≤–µ–¥–∏ –Ω–∞–∑–≤—É —Ñ—ñ–ª—å–º–∞, —è–∫–∏–π —Ç–∏ —Ö–æ—á–µ—à –¥–æ–¥–∞—Ç–∏.')
        await state.set_state('set_film_name')
    else:
        await message.answer(text='–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö —Ñ—ñ–ª—å–º—ñ–≤')


film_name = ''


@dp.message_handler(state='set_film_name')
async def set_film_name(message: types.Message, state = FSMContext):
    global film_name
    if len(message.text) > 64:
        message.answer(text='–ù–∞ –∂–∞–ª—å —è –Ω–µ –º–æ–∂—É –¥–æ–¥–∞—Ç–∏ —Ü–µ–π —Ñ—ñ–ª—å–º, –∞–¥–∂–µ –¥–æ–≤–∂–∏–Ω–∞ –π–æ–≥–æ –Ω–∞–∑–≤–∏ –Ω–µ –º–∞—î –ø–µ—Ä–µ–≤–∏—â—É–≤–∞—Ç–∏ 64 —Å–∏–º–≤–æ–ª–∏.')
    else:
        film_name = message.text
        films[film_name] = {}
        await state.set_state('set_site_url')
        await message.answer(text='–î–æ–±—Ä–µ. –¢–µ–ø–µ—Ä –≤–≤–µ–¥–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤–µ–±-—Å–∞–π—Ç –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é.')



@dp.message_handler(state='set_site_url')
async def  set_site_url(message: types.Message, state: FSMContext):
    global film_name
    film_site_url = message.text
    films[film_name]['site_url'] = film_site_url
    await state.set_state('set_description')
    await message.answer(text='–ß—É–¥–æ–≤–æ. –†–æ–∑–∫–∞–∂–∏ —â–æ—Å—å —Ü—ñ–∫–∞–≤–µ –ø—Ä–æ —Ü–µ–π —Ñ—ñ–ª—å–º.')



@dp.message_handler(state='set_description')
async def set_description(message: types.Message, state: FSMContext):
    global film_name
    film_description = message.text
    films[film_name]['description'] = film_description
    await state.set_state('set_photo')
    await message.answer(text='–°—É–ø–µ—Ä. –¢–µ–ø–µ—Ä –Ω–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ñ–æ—Ç–æ –¥–æ —Ü—å–æ–≥–æ —Ñ—ñ–ª—å–º—É.')



@dp.message_handler(state='set_photo')
async def set_photo(message:types.Message, state:FSMContext):
    global film_name
    film_photo = message.text
    films[film_name]['photo'] = film_photo
    await state.set_state('set_rating')
    await message.answer(text='–ù–∞–π—Å. –Ü –æ—Å—Ç–∞–Ω–Ω—î, –º–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–µ–Ω —Ä–µ–π—Ç–∏–Ω–≥ —Ñ—ñ–ª—å–º—É')



@dp.message_handler(state='set_rating')
async def set_rating(message: types.Message, state=FSMContext):
    global film_name
    film_rating = message.text
    films[film_name]['rating'] = film_rating
    await state.finish()
    await message.answer(text='–°—É–ø–µ—Ä. –ù–æ–≤–∏–π —Ñ—ñ–ª—å–º —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ –¥–æ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏.')






if __name__ == '__main__':
    executor.start_polling(dp)